# ================================================================
# Feature Voting System - Environment Configuration
# ================================================================
# Copy this file to .env and update the values for your environment
# Never commit the .env file to version control!

# ================================================================
# DATABASE CONFIGURATION
# ================================================================

# PostgreSQL connection string
# Format: postgresql://[user[:password]@][host][:port][/database][?param1=value1&...]
#
# For local development:
DATABASE_URL=postgresql://feature_voting_user:your_secure_password@localhost:5432/feature_voting_db

# For production (example):
# DATABASE_URL=postgresql://prod_user:ultra_secure_password@prod-db.example.com:5432/feature_voting_prod

# Database connection pool settings (optional)
# DB_POOL_SIZE=5
# DB_MAX_OVERFLOW=10
# DB_POOL_TIMEOUT=30

# ================================================================
# SECURITY CONFIGURATION
# ================================================================

# Application secret key - MUST be changed for each environment
# Generate a secure key using: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-super-secret-key-change-this-in-production

# JWT Algorithm for token signing (future use)
ALGORITHM=HS256

# Token expiration time in minutes
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ================================================================
# APPLICATION SETTINGS
# ================================================================

# Enable debug mode (True for development, False for production)
DEBUG=True

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=DEBUG

# Application environment (development, staging, production)
ENVIRONMENT=development

# ================================================================
# CORS CONFIGURATION
# ================================================================

# Allowed CORS origins (comma-separated for multiple origins)
# For development (allow all origins):
CORS_ORIGINS=["*"]

# For production (specific domains only):
# CORS_ORIGINS=["https://app.example.com","https://admin.example.com"]

# ================================================================
# API CONFIGURATION
# ================================================================

# API host and port (for development server)
API_HOST=0.0.0.0
API_PORT=8000

# API rate limiting (requests per minute per IP)
# RATE_LIMIT_PER_MINUTE=60

# ================================================================
# MONITORING AND LOGGING
# ================================================================

# Sentry DSN for error tracking (production)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Enable SQL query logging (development only)
# LOG_SQL_QUERIES=True

# ================================================================
# FEATURE FLAGS
# ================================================================

# Enable specific features
# ENABLE_USER_REGISTRATION=True
# ENABLE_FEATURE_CATEGORIES=False
# ENABLE_REAL_TIME_UPDATES=False

# ================================================================
# EXTERNAL SERVICES
# ================================================================

# Email service configuration (for notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# EMAIL_FROM=noreply@yourdomain.com

# Redis configuration (for caching and sessions)
# REDIS_URL=redis://localhost:6379/0

# ================================================================
# DEVELOPMENT SETTINGS
# ================================================================

# Auto-reload server on code changes (development only)
# AUTO_RELOAD=True

# Enable FastAPI docs endpoints (/docs, /redoc)
# ENABLE_DOCS=True

# Mock external services for development
# MOCK_EMAIL_SERVICE=True

# ================================================================
# TESTING CONFIGURATION
# ================================================================

# Test database URL (separate from development database)
# TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/feature_voting_test

# Use in-memory database for testing
# TEST_DATABASE_URL=sqlite:///:memory:

# ================================================================
# PERFORMANCE TUNING
# ================================================================

# Maximum request size (in bytes)
# MAX_REQUEST_SIZE=10485760

# Request timeout (in seconds)
# REQUEST_TIMEOUT=30

# Worker processes for production deployment
# WORKER_PROCESSES=4

# ================================================================
# BACKUP AND MAINTENANCE
# ================================================================

# Backup directory for database dumps
# BACKUP_DIR=/var/backups/feature_voting

# Automatic backup schedule (cron format)
# BACKUP_SCHEDULE=0 2 * * *

# Retention period for backups (days)
# BACKUP_RETENTION_DAYS=30